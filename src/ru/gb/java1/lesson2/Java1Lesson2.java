package ru.gb.java1.lesson2;



import java.util.Arrays;

public class Java1Lesson2 {

    //отдельные методы

/*
    1. Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
    Написать метод, заменяющий в принятом массиве 0 на 1, 1 на 0;
*/
    public static void change(int[] a) {
        for (int i = 0; i < a.length; i++) {
            //a[i] = a[i] == 1 ? 0 : 1;
            a[i] = 1 - a[i];
            }
    }

//////////////////////////////////////////////////////////////////////////////
/*
    2. Задать пустой целочисленный массив размером 8.
    Написать метод, который помощью цикла заполнит его значениями 1 4 7 10 13 16 19 22;
*/
    public static void fillingFrom1To22(int[] a) {
        for (int i = 0; i < a.length; i++)
            a[i] = i * 3 + 1;
    }

//////////////////////////////////////////////////////////////////////////////
/*
    3. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ],
    написать метод, принимающий на вход массив и умножающий числа меньше 6 на 2:
 */
    public static int[] checkNumberAndMultiply(int[] arr) {
        System.out.println("\n\n 3. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ], \n написать метод, принимающий на вход массив и умножающий числа меньше 6 на 2:");
        int[] arr3 = new int[arr.length];
        for (int i = 0; i < arr.length; i++) {
            arr3[i] = arr[i] < 6 ? arr[i] *= 2 : arr[i];
        }
        System.out.println(Arrays.toString(arr3));
        return arr3;
    }

//////////////////////////////////////////////////////////////////////////////
/*
    4. Задать одномерный массив. Написать методы поиска в нём минимального и максимального элемента;
*/
//    public static int maxNumber(int[] arr) {
//        int i = arr.length;
//        int[] arr4 = new int [arr.length];
//        for (i = 0; i < arr.length; i++) {
//            arr4[i] = arr[i];
//            if (arr4[i] > arr[0]) {
//                arr[0] = arr4[i]; } else {
//                arr[0] = arr[0];};
//            }
//        return arr[0];
//    }
//
//    public static int minNumber(int[] arr) {
//        int i = arr.length;
//        int[] arr4 = new int [arr.length];
//        for (i = 0; i < arr.length; i++) {
//            arr4[i] = arr[i];
//            if (arr4 [i] < arr[0]) {
//                arr[0] = arr4 [i]; } else {
//                arr[0] = arr[0];}
//        }
//        return arr[0];
//    }
    private static int minNumber(int[] array){
        int min = array[0];
        for (int index : array)
            if (index < min)
                min = index;

        return min;
    }
    private static int maxNumber(int[] array){
        int max = array[0];
        for (int index : array)
            if (index > max)
                max = index;

        return max;
    }

//////////////////////////////////////////////////////////////////////////////

 /*
    5. * Создать квадратный целочисленный массив (количество строк и столбцов одинаковое),
    заполнить его диагональные элементы единицами, используя цикл(ы);
*/
//     public static void crossFill(int[][] a) {
//         int x, y;
//         int[][] arr5 = new int[5][5];
//         for (x = 0; x < arr5.length; x++) {
//             for (y = 0; y < arr5.length; y++) {
//                 if ((x == y) || ((x + y) == arr5.length - 1)) {
//                     arr5[x][y] = 1;
//                 } else {
//                     arr5[x][y] = 0;
//                 }
//             }
//         }
//     }
     private static void crossFill(int[][] arr ) {
         for (int i = 0; i < arr.length; i++) {
             arr[i][i] = 1;
             arr[i][arr.length - 1 - i] = 1;
         }
     }

//////////////////////////////////////////////////////////////////////////////
/*
    6. ** Написать метод, в который передается не пустой одномерный целочисленный массив,
    метод должен вернуть true если в массиве есть место, в котором сумма левой и правой части массива равны.
    Примеры: checkBalance([1, 1, 1, || 2, 1]) → true, checkBalance ([2, 1, 1, 2, 1]) → false, checkBalance ([10, || 1, 2, 3, 4]) → true.
    Абстрактная граница показана символами ||, эти символы в массив не входят.
*/
    public static boolean checkBalance(int[] arr) {
        int i = arr.length, j = arr.length, a = 0, b = 0;
        boolean bool = false;
        int[] arr6 = new int [arr.length];
        for (i = 0; i < arr.length; i++) {
            arr6[i] = arr[i];
        }
        for (i = 0; i < arr.length; i++) {
            a = a + arr6[i];
            b = 0;
            for (j = (i + 1); j < arr.length; j++) {
                b = b + arr6[j];
            }
            if (a == b) {
                bool = true;
                break;
            } else continue;
        }
        return bool;
    }

/////////////////////////////////////////////////////////////////////////////

    public static void main(String[] args) {

/*
    1. Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
    Написать метод, заменяющий в принятом массиве 0 на 1, 1 на 0;
*/
        System.out.println("\n 1. Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].\n" +
                "Написать метод, заменяющий в принятом массиве 0 на 1, 1 на 0:");
        int[] arr1 = {1, 1, 0, 0, 1, 0, 1, 1, 0, 0};
        change(arr1);
        System.out.println(Arrays.toString(arr1));

//////////////////////////////////////////////////////////////////////////////
/*
    2. Задать пустой целочисленный массив размером 8.
    Написать метод, который помощью цикла заполнит его значениями 1 4 7 10 13 16 19 22;
*/
        System.out.println("\n\n 2. Задать пустой целочисленный массив размером 8. Написать метод, который с помощью цикла заполнит его значениями 1 4 7 10 13 16 19 22:");
        int[] arr2 = new int[8];
        fillingFrom1To22(arr2);
        System.out.println(Arrays.toString(arr2));


//////////////////////////////////////////////////////////////////////////////
/*
    3. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ],
    написать метод, принимающий на вход массив и умножающий числа меньше 6 на 2;
 */
        int[] arr3 = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
        checkNumberAndMultiply(arr3);
        //System.out.println();

//////////////////////////////////////////////////////////////////////////////
/*
    4. Задать одномерный массив.
    Написать методы поиска в нём минимального и максимального элемента:
 */
        System.out.println("\n\n4. Задать одномерный массив. Написать методы поиска в нём минимального и максимального элемента:");
        int[] arr4 = {2, 10, 6, 4, 11, 8, 10, 4, 8, 8, 9, 2};
        System.out.println(Arrays.toString(arr4));
        System.out.println("Минимальный элемент - " + minNumber(arr4));
        System.out.println("Максимальный элемент - " + maxNumber(arr4));

//////////////////////////////////////////////////////////////////////////////
/*
    5. * Создать квадратный целочисленный массив (количество строк и столбцов одинаковое),
    заполнить его диагональные элементы единицами, используя цикл(ы);
*/
        System.out.println("\n\n 5. * Создать квадратный целочисленный массив (количество строк и столбцов одинаковое), \n " +
                "заполнить его диагональные элементы единицами, используя цикл(ы):");
//        int x, y;
//        int[][] arr5 = new int[5][5];
//        for (x = 0; x < arr5.length; x++) {
//            for (y = 0; y < arr5.length; y++) {
//                if ((x == y) || ((x + y) == arr5.length - 1)) {
//                    arr5[x][y] = 1;
//                } else {
//                    arr5[x][y] = 0;
//                }
//            }
//            System.out.println(Arrays.toString(arr5[x]));
//        }
        //crossFill(arr);
        final int side = 10;
        int[][] arr5 = new int[side][side];
        crossFill(arr5);
        for (int i = 0; i < arr5.length; i++) {
            for (int j = 0; j < arr5[i].length; j++) {
                System.out.print(arr5[i][j] + " ");
            }
            System.out.println();
        }
//////////////////////////////////////////////////////////////////////////////
/*
    6. ** Написать метод, в который передается не пустой одномерный целочисленный массив,
    метод должен вернуть true если в массиве есть место, в котором сумма левой и правой части массива равны.
    Примеры: checkBalance([1, 1, 1, || 2, 1]) → true, checkBalance ([2, 1, 1, 2, 1]) → false, checkBalance ([10, || 1, 2, 3, 4]) → true.
    Абстрактная граница показана символами ||, эти символы в массив не входят.
*/
        System.out.println("\n\n 6. ** Написать метод, в который передается не пустой одномерный целочисленный массив,\n" +
                "метод должен вернуть true если в массиве есть место, в котором сумма левой и правой части массива равны.\n" +
                "Примеры: checkBalance([1, 1, 1, || 2, 1]) → true, checkBalance ([2, 1, 1, 2, 1]) → false, checkBalance ([10, || 1, 2, 3, 4]) → true.\n" +
                "Абстрактная граница показана символами ||, эти символы в массив не входят.");
        int[] arr6 = {10, 1, 6, 5, 2, 10};
        System.out.println();
        System.out.print("Q: Is the " + Arrays.toString(arr6) + " balanced? \nA: ");
        System.out.println(checkBalance(arr6));
    }
}
//////////////////////////////////////////////////////////////////////////////
